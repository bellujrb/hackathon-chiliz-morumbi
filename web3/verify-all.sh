#!/bin/bash

# Script master para verificar todos os contratos
# Executa as verifica√ß√µes em sequ√™ncia

echo "üîç Iniciando verifica√ß√£o de todos os contratos..."
echo "================================================"

# Carregar endere√ßos do arquivo
if [ -f "deployedContracts.txt" ]; then
    source deployedContracts.txt
    echo "üìã Endere√ßos carregados:"
    echo "HypeToken: $HYPETOKEN_ADDRESS"
    echo "Oracle: $ORACLE_ADDRESS"
    echo "Funify: $FUNIFY_ADDRESS"
else
    echo "‚ùå Arquivo deployedContracts.txt n√£o encontrado!"
    echo "üí° Execute primeiro o deploy-all.sh"
    exit 1
fi

echo ""
echo "üîß [1/3] Verificando HypeToken..."
forge verify-contract "$HYPETOKEN_ADDRESS" "src/HypeToken.sol:HypeToken" \
    --verifier-url "https://testnet.chiliscan.com/v2/network/testnet/evm/88882/etherscan" \
    --etherscan-api-key "verifyContract" \
    --num-of-optimizations 200 \
    --compiler-version "0.8.20"

echo ""
echo "üîß [2/3] Verificando Oracle..."
forge verify-contract "$ORACLE_ADDRESS" "src/Oracle.sol:Oracle" \
    --verifier-url "https://testnet.chiliscan.com/v2/network/testnet/evm/88882/etherscan" \
    --etherscan-api-key "verifyContract" \
    --num-of-optimizations 200 \
    --compiler-version "0.8.20"

echo ""
echo "üîß [3/3] Verificando Funify..."
# Gerar constructor args
CONSTRUCTOR_ARGS=$(cast abi-encode "constructor(address,address)" "$HYPETOKEN_ADDRESS" "$ORACLE_ADDRESS")
echo "üìù Constructor args: $CONSTRUCTOR_ARGS"

forge verify-contract "$FUNIFY_ADDRESS" "src/funify/Funify.sol:Funify" \
    --verifier-url "https://testnet.chiliscan.com/v2/network/testnet/evm/88882/etherscan" \
    --etherscan-api-key "verifyContract" \
    --num-of-optimizations 200 \
    --compiler-version "0.8.20" \
    --constructor-args "$CONSTRUCTOR_ARGS"

echo ""
echo "üéâ Verifica√ß√£o de todos os contratos conclu√≠da!"
echo "================================================"
echo "‚úÖ HypeToken: $HYPETOKEN_ADDRESS"
echo "‚úÖ Oracle: $ORACLE_ADDRESS"
echo "‚úÖ Funify: $FUNIFY_ADDRESS" 